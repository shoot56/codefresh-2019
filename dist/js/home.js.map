{"version":3,"sources":["webpack://codefresh/./resources/assets/js/pages/home.js"],"names":["animationPlaybackControl","container","animation","containerBounding","getBoundingClientRect","bottom","_idle","play","pause","document","addEventListener","target","parent","words","animationContainer","animationPath","querySelector","lottie","renderer","loop","autoplay","path","rendererSettings","preserveAspectRatio","window","bind","animationHandler","querySelectorAll","setInterval","i","length","word","next","firstWidth","offsetWidth","classList","remove","add","style","width","contains","nextWidth","setTimeout","Prism"],"mappings":"qJAKMA,G,gBAA2B,SAAEC,EAAWC,GAC5C,IAAMC,EAAoBF,EAAUG,wBAE/BD,EAAkBE,OAAS,GAAKH,EAAUI,OAC7CJ,EAAUK,OAGPJ,EAAkBE,OAAS,IAAMH,EAAUI,OAC9CJ,EAAUM,UA4DdC,SAASC,iBAAkB,oBAAoB,WArClB,IAAEC,EAEvBC,EACJC,GAtBqB,SAAEC,EAAoBC,GAC7C,IAAMd,EAAYQ,SAASO,cAAeF,GAE1C,GAAMb,EAAN,CAEA,IAAMC,EAAYe,kBAAsB,CACtChB,UAAWA,EACXiB,SAAU,SACVC,MAAM,EACNC,UAAU,EACVC,KAAMN,EACNO,iBAAkB,CAChBC,oBAAqB,UAIzBC,OAAOd,iBAAkB,SAAUV,EAAyByB,U,EAAYxB,EAAWC,KAyCnFwB,CAAkB,sBAAuB,6EAtCZf,EAuCP,kBArChBC,EAASH,SAASO,cAAeL,GACrCE,EAAQJ,SAASkB,iBAAT,UAA+BhB,EAA/B,OAEViB,aAAa,WACX,IAAM,IAAIC,EAAI,EAAGA,EAAIhB,EAAMiB,OAAQD,IAAM,CACvC,IAAME,EAAOlB,EAAOgB,GAElBG,EAAOH,EAAI,EAEb,GAAKG,IAASnB,EAAMiB,OAAS,CAC3B,IAAMG,EAAapB,EAJX,GAI0BqB,YAElCH,EAAKI,UAAUC,OAAQ,cACvBvB,EAPQ,GAOOsB,UAAUE,IAAK,cAC9BzB,EAAO0B,MAAMC,MAAb,UAAyBN,EAAzB,MACA,MAGF,GAAKF,EAAKI,UAAUK,SAAU,cAAiB,CAC7C,IAAMC,EAAY5B,EAAOmB,GAAOE,YAEhCH,EAAKI,UAAUC,OAAQ,cACvBL,EAAKI,UAAUE,IAAK,aACpBxB,EAAOmB,GAAOG,UAAUE,IAAK,cAC7BzB,EAAO0B,MAAMC,MAAb,UAAyBE,EAAzB,MACA,OAIJ7B,EAAOuB,UAAUC,OAAQ,cAChBM,YAAY,kBAAM9B,EAAOuB,UAAUE,IAAK,gBAAgB,OAEhE,MAMHM,wB","file":"/js/home.js","sourcesContent":["import lottie from 'lottie-web';\nimport Prism from 'prismjs';\nimport 'prismjs/components/prism-yaml';\nimport 'prismjs/plugins/line-numbers/prism-line-numbers';\n\nconst animationPlaybackControl = ( container, animation ) => {\n  const containerBounding = container.getBoundingClientRect();\n\n  if ( containerBounding.bottom > 0 && animation._idle ) {\n    animation.play();\n  }\n\n  if ( containerBounding.bottom < 0 && !animation._idle ) {\n    animation.pause();\n  }\n}\n\nconst animationHandler = ( animationContainer, animationPath ) => {\n  const container = document.querySelector( animationContainer );\n\n  if ( !container ) return;\n\n  const animation = lottie.loadAnimation( {\n    container: container,\n    renderer: 'canvas',\n    loop: true,\n    autoplay: true,\n    path: animationPath,\n    rendererSettings: {\n      preserveAspectRatio: 'none',\n    },\n  } );\n\n  window.addEventListener( 'scroll', animationPlaybackControl.bind( this, container, animation ) );\n}\n\nconst rotatingWordsHandler = ( target ) => {\n  let ticker = 0;\n  const parent = document.querySelector( target ),\n    words = document.querySelectorAll( `${ target } b` );\n\n  setInterval( () => {\n    for ( let i = 0; i < words.length; i++ ) {\n      const word = words[ i ],\n        first = 0,\n        next = i + 1;\n\n      if ( next === words.length ) {\n        const firstWidth = words[ first ].offsetWidth;\n\n        word.classList.remove( 'is-showing' );\n        words[ first ].classList.add( 'is-showing' );\n        parent.style.width = `${ firstWidth }px`;\n        break;\n      }\n\n      if ( word.classList.contains( 'is-showing' ) ) {\n        const nextWidth = words[ next ].offsetWidth;\n\n        word.classList.remove( 'is-showing' );\n        word.classList.add( 'is-hiding' );\n        words[ next ].classList.add( 'is-showing' );\n        parent.style.width = `${ nextWidth }px`;\n        break;\n      }\n    }\n\n    parent.classList.remove( 'is-loading' )\n    ticker = setTimeout( () => parent.classList.add( 'is-loading' ), 600 );\n    ticker;\n  }, 2500 );\n}\n\ndocument.addEventListener( 'DOMContentLoaded', () => {\n  animationHandler( '#animationContainer', '/wp-content/themes/codefresh-2019/resources/assets/js/util/animation.json' );\n  rotatingWordsHandler( '.rotating-words' );\n  Prism.highlightAll();\n} );\n"],"sourceRoot":""}