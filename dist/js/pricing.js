/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkcodefresh"] = self["webpackChunkcodefresh"] || []).push([["/js/pricing"],{

/***/ "./resources/assets/js/pages/pricing.js":
/*!**********************************************!*\
  !*** ./resources/assets/js/pages/pricing.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var ion_rangeslider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ion-rangeslider */ \"./node_modules/ion-rangeslider/js/ion.rangeSlider.js\");\n/* harmony import */ var ion_rangeslider__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ion_rangeslider__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var numeral__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! numeral */ \"./node_modules/numeral/numeral.js\");\n/* harmony import */ var numeral__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(numeral__WEBPACK_IMPORTED_MODULE_1__);\n\n\nvar selectors = {\n  pagePricing: 'body.pricing'\n};\ndocument.addEventListener('DOMContentLoaded', function () {\n  var pagePricing = document.querySelector(selectors.pagePricing);\n\n  if (pagePricing) {\n    var basic = document.querySelector('#basic .plan__price'),\n        pro = document.querySelector('#pro .plan__price'),\n        basicPrice = document.querySelector('#basicPrice'),\n        basicInputs = document.querySelectorAll('.plan__input--basic'),\n        basicSteps = document.querySelector('#totalSteps-basic'),\n        basicStepsSm = jQuery('#basicSteps-sm'),\n        basicStepsMd = jQuery('#basicSteps-md'),\n        basicStepsLg = jQuery('#basicSteps-lg'),\n        basicRunner = jQuery('#basicRunner'),\n        proPrice = document.querySelector('#proPrice'),\n        proInputs = document.querySelectorAll('.plan__input--pro'),\n        proSteps = document.querySelector('#totalSteps-pro'),\n        proRunner = jQuery('#proRunner'),\n        proStepsSm = jQuery('#proSteps-sm'),\n        proStepsMd = jQuery('#proSteps-md'),\n        proStepsLg = jQuery('#proSteps-lg');\n\n    var currPrice = function currPrice(el) {\n      return parseInt(el.attr('data-price')) * el.prop('value');\n    };\n\n    var currPriceSm = function currPriceSm(el) {\n      return parseInt(el.attr('data-price')) * (el.prop('value') - 1);\n    };\n\n    var stepPrice = function stepPrice(el) {\n      return parseInt(el.attr('data-price'));\n    };\n\n    var currStep = function currStep(curr, nd, rd, total) {\n      var stepCurr = parseInt(curr),\n          stepNd = parseInt(nd.data('ionRangeSlider').old_from),\n          stepRd = parseInt(rd.data('ionRangeSlider').old_from);\n      total.innerHTML = stepCurr + stepNd + stepRd;\n    };\n\n    var formatPriceBasic = function formatPriceBasic(plan, price) {\n      if (price > 0) {\n        if (plan.classList.contains('is-free')) plan.classList.remove('is-free');\n        return numeral__WEBPACK_IMPORTED_MODULE_1___default()(price).format('0,0');\n      } else {\n        if (!plan.classList.contains('is-free')) plan.classList.add('is-free');\n        return 'FREE';\n      }\n    };\n\n    var formatPricePro = function formatPricePro(price) {\n      return numeral__WEBPACK_IMPORTED_MODULE_1___default()(price).format('0,0');\n    };\n\n    var switchBilling = function switchBilling() {\n      var basicPriceSm = stepPrice(basicStepsSm) * (basicStepsSm.prop('value') - 1),\n          basicPriceMd = stepPrice(basicStepsMd) * basicStepsMd.prop('value'),\n          basicPriceLg = stepPrice(basicStepsLg) * basicStepsLg.prop('value'),\n          proPriceSm = stepPrice(proStepsSm) * proStepsSm.prop('value'),\n          proPriceMd = stepPrice(proStepsMd) * proStepsMd.prop('value'),\n          proPriceLg = stepPrice(proStepsLg) * proStepsLg.prop('value');\n      basicPrice.innerHTML = formatPriceBasic(basic, basicPriceSm + basicPriceMd + basicPriceLg);\n      proPrice.innerHTML = formatPriceBasic(pro, proPriceSm + proPriceMd + proPriceLg);\n    };\n\n    var basicMontly = function basicMontly(arr) {\n      for (var i = 0; i < arr.length; i++) {\n        var el = arr[i];\n        if (i === 0) el.setAttribute('data-price', 29);\n        if (i === 1) el.setAttribute('data-price', 69);\n        if (i === 2) el.setAttribute('data-price', 199);\n      }\n    };\n\n    var basicAnnually = function basicAnnually(arr) {\n      for (var i = 0; i < arr.length; i++) {\n        var el = arr[i];\n        if (i === 0) el.setAttribute('data-price', 19);\n        if (i === 1) el.setAttribute('data-price', 49);\n        if (i === 2) el.setAttribute('data-price', 139);\n      }\n    };\n\n    var proMontly = function proMontly(arr) {\n      for (var i = 0; i < arr.length; i++) {\n        var el = arr[i];\n        if (i === 0) el.setAttribute('data-price', 49);\n        if (i === 1) el.setAttribute('data-price', 129);\n        if (i === 2) el.setAttribute('data-price', 389);\n      }\n    };\n\n    var proAnnually = function proAnnually(arr) {\n      for (var i = 0; i < arr.length; i++) {\n        var el = arr[i];\n        if (i === 0) el.setAttribute('data-price', 34);\n        if (i === 1) el.setAttribute('data-price', 89);\n        if (i === 2) el.setAttribute('data-price', 269);\n      }\n    }; // Switches\n\n\n    var switchBtnRight = document.querySelector('.switch-button-case.right');\n    var switchBtnLeft = document.querySelector('.switch-button-case.left');\n    var activeBilledSwitch = document.querySelector('.active--billed');\n\n    var switchLeft = function switchLeft() {\n      switchBtnRight.classList.remove('active-case');\n      switchBtnLeft.classList.add('active-case');\n      activeBilledSwitch.style.left = '1px';\n      basicAnnually(basicInputs);\n      proAnnually(proInputs);\n      switchBilling();\n    };\n\n    var switchRight = function switchRight() {\n      switchBtnRight.classList.add('active-case');\n      switchBtnLeft.classList.remove('active-case');\n      activeBilledSwitch.style.left = '50.3%';\n      basicMontly(basicInputs);\n      proMontly(proInputs);\n      switchBilling();\n    };\n\n    switchBtnLeft.addEventListener('click', function () {\n      return switchLeft();\n    }, false);\n    switchBtnRight.addEventListener('click', function () {\n      return switchRight();\n    }, false); // Range Sliders\n    // Basic\n\n    basicStepsSm.ionRangeSlider({\n      min: 0,\n      max: 20,\n      from: 0,\n      hide_min_max: true,\n      skin: 'round',\n      onChange: function onChange(data) {\n        return currStep(data.from, basicStepsMd, basicStepsLg, basicSteps);\n      },\n      onFinish: function onFinish(data) {\n        var instance = basicStepsSm.data('ionRangeSlider'),\n            md = currPrice(basicStepsMd),\n            lg = currPrice(basicStepsLg),\n            singleStepPrice = stepPrice(basicStepsSm),\n            price = singleStepPrice * (data.from - 1);\n        basicPrice.innerHTML = formatPriceBasic(basic, price + md + lg);\n\n        if (data.from !== 0) {\n          basicPrice.innerHTML = formatPriceBasic(basic, price + md + lg);\n        } else {\n          basicPrice.innerHTML = formatPriceBasic(basic, md + lg);\n          instance.update({\n            from: 0\n          });\n        }\n      },\n      onUpdate: function onUpdate(data) {\n        return currStep(data.from, basicStepsMd, basicStepsLg, basicSteps);\n      }\n    });\n    basicStepsMd.ionRangeSlider({\n      min: 0,\n      max: 20,\n      from: 0,\n      hide_min_max: true,\n      skin: 'round',\n      onChange: function onChange(data) {\n        return currStep(data.from, basicStepsSm, basicStepsLg, basicSteps);\n      },\n      onFinish: function onFinish(data) {\n        var instance = basicStepsMd.data('ionRangeSlider'),\n            stepsSm = basicStepsSm.prop('value'),\n            stepsLg = basicStepsLg.prop('value'),\n            sm = currPriceSm(basicStepsSm),\n            lg = currPrice(basicStepsLg),\n            singleStepPrice = stepPrice(basicStepsMd),\n            price = singleStepPrice * data.from;\n        basicPrice.innerHTML = formatPriceBasic(basic, price + sm + lg);\n\n        if (stepsSm == 0 && stepsLg == 0 && data.from == 0) {\n          instance.update({\n            from: 1\n          });\n          basicPrice.innerHTML = formatPriceBasic(basic, singleStepPrice + sm + lg);\n        }\n      },\n      onUpdate: function onUpdate(data) {\n        return currStep(data.from, basicStepsSm, basicStepsLg, basicSteps);\n      }\n    });\n    basicStepsLg.ionRangeSlider({\n      min: 0,\n      max: 20,\n      from: 0,\n      hide_min_max: true,\n      skin: 'round',\n      onChange: function onChange(data) {\n        return currStep(data.from, basicStepsSm, basicStepsMd, basicSteps);\n      },\n      onFinish: function onFinish(data) {\n        var instance = basicStepsLg.data('ionRangeSlider'),\n            stepsSm = basicStepsSm.prop('value'),\n            stepsMd = basicStepsMd.prop('value'),\n            sm = currPriceSm(basicStepsSm),\n            md = currPrice(basicStepsMd),\n            singleStepPrice = stepPrice(basicStepsLg),\n            price = singleStepPrice * data.from;\n        basicPrice.innerHTML = formatPriceBasic(basic, price + sm + md);\n\n        if (stepsSm == 0 && stepsMd == 0 && data.from == 0) {\n          instance.update({\n            from: 1\n          });\n          basicPrice.innerHTML = formatPriceBasic(basic, singleStepPrice + sm + md);\n        }\n      },\n      onUpdate: function onUpdate(data) {\n        return currStep(data.from, basicStepsSm, basicStepsMd, basicSteps);\n      }\n    });\n    basicRunner.ionRangeSlider({\n      min: 0,\n      max: 1,\n      from: 1,\n      hide_min_max: true,\n      from_fixed: true,\n      to_fixed: true,\n      skin: 'round'\n    }); // Pro\n\n    proStepsSm.ionRangeSlider({\n      min: 0,\n      max: 20,\n      from: 1,\n      hide_min_max: true,\n      skin: 'round',\n      onChange: function onChange(data) {\n        return currStep(data.from, proStepsMd, proStepsLg, proSteps);\n      },\n      onFinish: function onFinish(data) {\n        var instance = proStepsSm.data('ionRangeSlider'),\n            stepsMd = proStepsMd.prop('value'),\n            stepsLg = proStepsLg.prop('value'),\n            md = currPrice(proStepsMd),\n            lg = currPrice(proStepsLg),\n            singleStepPrice = stepPrice(proStepsSm),\n            price = singleStepPrice * data.from;\n        proPrice.innerHTML = formatPricePro(price + md + lg);\n\n        if (stepsMd == 0 && stepsLg == 0 && data.from == 0) {\n          instance.update({\n            from: 1\n          });\n          proPrice.innerHTML = formatPricePro(singleStepPrice + md + lg);\n        }\n      },\n      onUpdate: function onUpdate(data) {\n        return currStep(data.from, proStepsMd, proStepsLg, proSteps);\n      }\n    });\n    proStepsMd.ionRangeSlider({\n      min: 0,\n      max: 20,\n      from: 0,\n      hide_min_max: true,\n      skin: 'round',\n      onChange: function onChange(data) {\n        return currStep(data.from, proStepsSm, proStepsLg, proSteps);\n      },\n      onFinish: function onFinish(data) {\n        var instance = proStepsMd.data('ionRangeSlider'),\n            stepsSm = proStepsSm.prop('value'),\n            stepsLg = proStepsLg.prop('value'),\n            sm = currPrice(proStepsSm),\n            lg = currPrice(proStepsLg),\n            singleStepPrice = stepPrice(proStepsMd),\n            price = singleStepPrice * data.from;\n        proPrice.innerHTML = formatPricePro(price + sm + lg);\n\n        if (stepsSm == 0 && stepsLg == 0 && data.from == 0) {\n          instance.update({\n            from: 1\n          });\n          proPrice.innerHTML = formatPricePro(singleStepPrice + sm + lg);\n        }\n      },\n      onUpdate: function onUpdate(data) {\n        return currStep(data.from, proStepsMd, proStepsLg, proSteps);\n      }\n    });\n    proStepsLg.ionRangeSlider({\n      min: 0,\n      max: 20,\n      from: 0,\n      hide_min_max: true,\n      skin: 'round',\n      onChange: function onChange(data) {\n        return currStep(data.from, proStepsSm, proStepsMd, proSteps);\n      },\n      onFinish: function onFinish(data) {\n        var instance = proStepsLg.data('ionRangeSlider'),\n            stepsSm = proStepsSm.prop('value'),\n            stepsMd = proStepsMd.prop('value'),\n            sm = currPrice(proStepsSm),\n            md = currPrice(proStepsMd),\n            singleStepPrice = stepPrice(proStepsLg),\n            price = singleStepPrice * data.from;\n        proPrice.innerHTML = formatPricePro(price + sm + md);\n\n        if (stepsSm == 0 && stepsMd == 0 && data.from == 0) {\n          instance.update({\n            from: 1\n          });\n          proPrice.innerHTML = formatPricePro(singleStepPrice + sm + md);\n        }\n      },\n      onUpdate: function onUpdate(data) {\n        return currStep(data.from, proStepsMd, proStepsLg, proSteps);\n      }\n    });\n    proRunner.ionRangeSlider({\n      min: 0,\n      max: 1,\n      from: 1,\n      hide_min_max: true,\n      from_fixed: true,\n      to_fixed: true,\n      skin: 'round'\n    }); // FAQ\n\n    var chatBtn = document.getElementById('chatLink');\n    if (chatBtn) chatBtn.addEventListener('click', function (e) {\n      Intercom('show'); // eslint-disable-line\n\n      e.preventDefault();\n    });\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/js/pages/pricing.js\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ "use strict";
/******/ 
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["/js/vendor"], function() { return __webpack_exec__("./resources/assets/js/pages/pricing.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);