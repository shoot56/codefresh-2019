/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkcodefresh"] = self["webpackChunkcodefresh"] || []).push([["/js/features-single"],{

/***/ "./resources/assets/js/pages/features-single.js":
/*!******************************************************!*\
  !*** ./resources/assets/js/pages/features-single.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _plugins_jquery_twentytwenty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../plugins/jquery.twentytwenty */ \"./resources/assets/js/plugins/jquery.twentytwenty.js\");\n/* harmony import */ var _plugins_jquery_twentytwenty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_plugins_jquery_twentytwenty__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _plugins_jquery_event_move__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../plugins/jquery.event.move */ \"./resources/assets/js/plugins/jquery.event.move.js\");\n/* harmony import */ var _plugins_jquery_event_move__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_plugins_jquery_event_move__WEBPACK_IMPORTED_MODULE_1__);\n\n // Compare images\n\njQuery('#featuresComparison').twentytwenty({\n  default_offset_pct: 0.375,\n  no_overlay: true,\n  before_label: 'Quick',\n  after_label: 'Advanced'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jb2RlZnJlc2gvLi9yZXNvdXJjZXMvYXNzZXRzL2pzL3BhZ2VzL2ZlYXR1cmVzLXNpbmdsZS5qcz9jZTdhIl0sIm5hbWVzIjpbImpRdWVyeSIsInR3ZW50eXR3ZW50eSIsImRlZmF1bHRfb2Zmc2V0X3BjdCIsIm5vX292ZXJsYXkiLCJiZWZvcmVfbGFiZWwiLCJhZnRlcl9sYWJlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtDQUdBOztBQUNBQSxNQUFNLENBQUUscUJBQUYsQ0FBTixDQUFnQ0MsWUFBaEMsQ0FBOEM7QUFDNUNDLG9CQUFrQixFQUFFLEtBRHdCO0FBRTVDQyxZQUFVLEVBQUUsSUFGZ0M7QUFHNUNDLGNBQVksRUFBRSxPQUg4QjtBQUk1Q0MsYUFBVyxFQUFFO0FBSitCLENBQTlDIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2Fzc2V0cy9qcy9wYWdlcy9mZWF0dXJlcy1zaW5nbGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4uL3BsdWdpbnMvanF1ZXJ5LnR3ZW50eXR3ZW50eSc7XG5pbXBvcnQgJy4uL3BsdWdpbnMvanF1ZXJ5LmV2ZW50Lm1vdmUnO1xuXG4vLyBDb21wYXJlIGltYWdlc1xualF1ZXJ5KCAnI2ZlYXR1cmVzQ29tcGFyaXNvbicgKS50d2VudHl0d2VudHkoIHtcbiAgZGVmYXVsdF9vZmZzZXRfcGN0OiAwLjM3NSxcbiAgbm9fb3ZlcmxheTogdHJ1ZSxcbiAgYmVmb3JlX2xhYmVsOiAnUXVpY2snLFxuICBhZnRlcl9sYWJlbDogJ0FkdmFuY2VkJyxcbn0gKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/assets/js/pages/features-single.js\n");

/***/ }),

/***/ "./resources/assets/js/plugins/jquery.event.move.js":
/*!**********************************************************!*\
  !*** ./resources/assets/js/plugins/jquery.event.move.js ***!
  \**********************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* provided dependency */ var __webpack_provided_window_dot_jQuery = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// DOM.event.move\n//\n// 2.0.0\n//\n// Stephen Band\n//\n// Triggers 'movestart', 'move' and 'moveend' events after\n// mousemoves following a mousedown cross a distance threshold,\n// similar to the native 'dragstart', 'drag' and 'dragend' events.\n// Move events are throttled to animation frames. Move event objects\n// have the properties:\n//\n// pageX:\n// pageY:     Page coordinates of pointer.\n// startX:\n// startY:    Page coordinates of pointer at movestart.\n// distX:\n// distY:     Distance the pointer has moved since movestart.\n// deltaX:\n// deltaY:    Distance the finger has moved since last event.\n// velocityX:\n// velocityY: Average velocity over last few events.\n\n/* eslint-disable */\n(function (fn) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (fn),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(function () {\n  var assign = Object.assign || __webpack_provided_window_dot_jQuery && jQuery.extend; // Number of pixels a pressed pointer travels before movestart\n  // event is fired.\n\n  var threshold = 8; // Shim for requestAnimationFrame, falling back to timer. See:\n  // see http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n  var requestFrame = function () {\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (fn, element) {\n      return window.setTimeout(function () {\n        fn();\n      }, 25);\n    };\n  }(); // Shim for customEvent\n  // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent#Polyfill\n\n\n  (function () {\n    if (typeof window.CustomEvent === \"function\") return false;\n\n    function CustomEvent(event, params) {\n      params = params || {\n        bubbles: false,\n        cancelable: false,\n        detail: undefined\n      };\n      var evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n      return evt;\n    }\n\n    CustomEvent.prototype = window.Event.prototype;\n    window.CustomEvent = CustomEvent;\n  })();\n\n  var ignoreTags = {\n    textarea: true,\n    input: true,\n    select: true,\n    button: true\n  };\n  var mouseevents = {\n    move: 'mousemove',\n    cancel: 'mouseup dragstart',\n    end: 'mouseup'\n  };\n  var touchevents = {\n    move: 'touchmove',\n    cancel: 'touchend',\n    end: 'touchend'\n  };\n  var rspaces = /\\s+/; // DOM Events\n\n  var eventOptions = {\n    bubbles: true,\n    cancelable: true\n  };\n  var eventsSymbol = typeof Symbol === \"function\" ? Symbol('events') : {};\n\n  function createEvent(type) {\n    return new CustomEvent(type, eventOptions);\n  }\n\n  function getEvents(node) {\n    return node[eventsSymbol] || (node[eventsSymbol] = {});\n  }\n\n  function on(node, types, fn, data, selector) {\n    types = types.split(rspaces);\n    var events = getEvents(node);\n    var i = types.length;\n    var handlers, type;\n\n    function handler(e) {\n      fn(e, data);\n    }\n\n    while (i--) {\n      type = types[i];\n      handlers = events[type] || (events[type] = []);\n      handlers.push([fn, handler]);\n      node.addEventListener(type, handler);\n    }\n  }\n\n  function off(node, types, fn, selector) {\n    types = types.split(rspaces);\n    var events = getEvents(node);\n    var i = types.length;\n    var type, handlers, k;\n\n    if (!events) {\n      return;\n    }\n\n    while (i--) {\n      type = types[i];\n      handlers = events[type];\n\n      if (!handlers) {\n        continue;\n      }\n\n      k = handlers.length;\n\n      while (k--) {\n        if (handlers[k][0] === fn) {\n          node.removeEventListener(type, handlers[k][1]);\n          handlers.splice(k, 1);\n        }\n      }\n    }\n  }\n\n  function trigger(node, type, properties) {\n    // Don't cache events. It prevents you from triggering an event of a\n    // given type from inside the handler of another event of that type.\n    var event = createEvent(type);\n\n    if (properties) {\n      assign(event, properties);\n    }\n\n    node.dispatchEvent(event);\n  } // Constructors\n\n\n  function Timer(fn) {\n    var callback = fn,\n        active = false,\n        running = false;\n\n    function trigger(time) {\n      if (active) {\n        callback();\n        requestFrame(trigger);\n        running = true;\n        active = false;\n      } else {\n        running = false;\n      }\n    }\n\n    this.kick = function (fn) {\n      active = true;\n\n      if (!running) {\n        trigger();\n      }\n    };\n\n    this.end = function (fn) {\n      var cb = callback;\n\n      if (!fn) {\n        return;\n      } // If the timer is not running, simply call the end callback.\n\n\n      if (!running) {\n        fn();\n      } // If the timer is running, and has been kicked lately, then\n      // queue up the current callback and the end callback, otherwise\n      // just the end callback.\n      else {\n          callback = active ? function () {\n            cb();\n            fn();\n          } : fn;\n          active = true;\n        }\n    };\n  } // Functions\n\n\n  function noop() {}\n\n  function preventDefault(e) {\n    e.preventDefault();\n  }\n\n  function isIgnoreTag(e) {\n    return !!ignoreTags[e.target.tagName.toLowerCase()];\n  }\n\n  function isPrimaryButton(e) {\n    // Ignore mousedowns on any button other than the left (or primary)\n    // mouse button, or when a modifier key is pressed.\n    return e.which === 1 && !e.ctrlKey && !e.altKey;\n  }\n\n  function identifiedTouch(touchList, id) {\n    var i, l;\n\n    if (touchList.identifiedTouch) {\n      return touchList.identifiedTouch(id);\n    } // touchList.identifiedTouch() does not exist in\n    // webkit yetâ€¦ we must do the search ourselves...\n\n\n    i = -1;\n    l = touchList.length;\n\n    while (++i < l) {\n      if (touchList[i].identifier === id) {\n        return touchList[i];\n      }\n    }\n  }\n\n  function changedTouch(e, data) {\n    var touch = identifiedTouch(e.changedTouches, data.identifier); // This isn't the touch you're looking for.\n\n    if (!touch) {\n      return;\n    } // Chrome Android (at least) includes touches that have not\n    // changed in e.changedTouches. That's a bit annoying. Check\n    // that this touch has changed.\n\n\n    if (touch.pageX === data.pageX && touch.pageY === data.pageY) {\n      return;\n    }\n\n    return touch;\n  } // Handlers that decide when the first movestart is triggered\n\n\n  function mousedown(e) {\n    // Ignore non-primary buttons\n    if (!isPrimaryButton(e)) {\n      return;\n    } // Ignore form and interactive elements\n\n\n    if (isIgnoreTag(e)) {\n      return;\n    }\n\n    on(document, mouseevents.move, mousemove, e);\n    on(document, mouseevents.cancel, mouseend, e);\n  }\n\n  function mousemove(e, data) {\n    checkThreshold(e, data, e, removeMouse);\n  }\n\n  function mouseend(e, data) {\n    removeMouse();\n  }\n\n  function removeMouse() {\n    off(document, mouseevents.move, mousemove);\n    off(document, mouseevents.cancel, mouseend);\n  }\n\n  function touchstart(e) {\n    // Don't get in the way of interaction with form elements\n    if (ignoreTags[e.target.tagName.toLowerCase()]) {\n      return;\n    }\n\n    var touch = e.changedTouches[0]; // iOS live updates the touch objects whereas Android gives us copies.\n    // That means we can't trust the touchstart object to stay the same,\n    // so we must copy the data. This object acts as a template for\n    // movestart, move and moveend event objects.\n\n    var data = {\n      target: touch.target,\n      pageX: touch.pageX,\n      pageY: touch.pageY,\n      identifier: touch.identifier,\n      // The only way to make handlers individually unbindable is by\n      // making them unique.\n      touchmove: function touchmove(e, data) {\n        _touchmove(e, data);\n      },\n      touchend: function touchend(e, data) {\n        _touchend(e, data);\n      }\n    };\n    on(document, touchevents.move, data.touchmove, data);\n    on(document, touchevents.cancel, data.touchend, data);\n  }\n\n  function _touchmove(e, data) {\n    var touch = changedTouch(e, data);\n\n    if (!touch) {\n      return;\n    }\n\n    checkThreshold(e, data, touch, removeTouch);\n  }\n\n  function _touchend(e, data) {\n    var touch = identifiedTouch(e.changedTouches, data.identifier);\n\n    if (!touch) {\n      return;\n    }\n\n    removeTouch(data);\n  }\n\n  function removeTouch(data) {\n    off(document, touchevents.move, data.touchmove);\n    off(document, touchevents.cancel, data.touchend);\n  }\n\n  function checkThreshold(e, data, touch, fn) {\n    var distX = touch.pageX - data.pageX;\n    var distY = touch.pageY - data.pageY; // Do nothing if the threshold has not been crossed.\n\n    if (distX * distX + distY * distY < threshold * threshold) {\n      return;\n    }\n\n    triggerStart(e, data, touch, distX, distY, fn);\n  }\n\n  function triggerStart(e, data, touch, distX, distY, fn) {\n    var touches = e.targetTouches;\n    var time = e.timeStamp - data.timeStamp; // Create a movestart object with some special properties that\n    // are passed only to the movestart handlers.\n\n    var template = {\n      altKey: e.altKey,\n      ctrlKey: e.ctrlKey,\n      shiftKey: e.shiftKey,\n      startX: data.pageX,\n      startY: data.pageY,\n      distX: distX,\n      distY: distY,\n      deltaX: distX,\n      deltaY: distY,\n      pageX: touch.pageX,\n      pageY: touch.pageY,\n      velocityX: distX / time,\n      velocityY: distY / time,\n      identifier: data.identifier,\n      targetTouches: touches,\n      finger: touches ? touches.length : 1,\n      enableMove: function enableMove() {\n        this.moveEnabled = true;\n        this.enableMove = noop;\n        e.preventDefault();\n      }\n    }; // Trigger the movestart event.\n\n    trigger(data.target, 'movestart', template); // Unbind handlers that tracked the touch or mouse up till now.\n\n    fn(data);\n  } // Handlers that control what happens following a movestart\n\n\n  function activeMousemove(e, data) {\n    var timer = data.timer;\n    data.touch = e;\n    data.timeStamp = e.timeStamp;\n    timer.kick();\n  }\n\n  function activeMouseend(e, data) {\n    var target = data.target;\n    var event = data.event;\n    var timer = data.timer;\n    removeActiveMouse();\n    endEvent(target, event, timer, function () {\n      // Unbind the click suppressor, waiting until after mouseup\n      // has been handled.\n      setTimeout(function () {\n        off(target, 'click', preventDefault);\n      }, 0);\n    });\n  }\n\n  function removeActiveMouse() {\n    off(document, mouseevents.move, activeMousemove);\n    off(document, mouseevents.end, activeMouseend);\n  }\n\n  function activeTouchmove(e, data) {\n    var event = data.event;\n    var timer = data.timer;\n    var touch = changedTouch(e, event);\n\n    if (!touch) {\n      return;\n    } // Stop the interface from gesturing\n\n\n    e.preventDefault();\n    event.targetTouches = e.targetTouches;\n    data.touch = touch;\n    data.timeStamp = e.timeStamp;\n    timer.kick();\n  }\n\n  function activeTouchend(e, data) {\n    var target = data.target;\n    var event = data.event;\n    var timer = data.timer;\n    var touch = identifiedTouch(e.changedTouches, event.identifier); // This isn't the touch you're looking for.\n\n    if (!touch) {\n      return;\n    }\n\n    removeActiveTouch(data);\n    endEvent(target, event, timer);\n  }\n\n  function removeActiveTouch(data) {\n    off(document, touchevents.move, data.activeTouchmove);\n    off(document, touchevents.end, data.activeTouchend);\n  } // Logic for triggering move and moveend events\n\n\n  function updateEvent(event, touch, timeStamp) {\n    var time = timeStamp - event.timeStamp;\n    event.distX = touch.pageX - event.startX;\n    event.distY = touch.pageY - event.startY;\n    event.deltaX = touch.pageX - event.pageX;\n    event.deltaY = touch.pageY - event.pageY; // Average the velocity of the last few events using a decay\n    // curve to even out spurious jumps in values.\n\n    event.velocityX = 0.3 * event.velocityX + 0.7 * event.deltaX / time;\n    event.velocityY = 0.3 * event.velocityY + 0.7 * event.deltaY / time;\n    event.pageX = touch.pageX;\n    event.pageY = touch.pageY;\n  }\n\n  function endEvent(target, event, timer, fn) {\n    timer.end(function () {\n      trigger(target, 'moveend', event);\n      return fn && fn();\n    });\n  } // Set up the DOM\n\n\n  function movestart(e) {\n    if (e.defaultPrevented) {\n      return;\n    }\n\n    if (!e.moveEnabled) {\n      return;\n    }\n\n    var event = {\n      startX: e.startX,\n      startY: e.startY,\n      pageX: e.pageX,\n      pageY: e.pageY,\n      distX: e.distX,\n      distY: e.distY,\n      deltaX: e.deltaX,\n      deltaY: e.deltaY,\n      velocityX: e.velocityX,\n      velocityY: e.velocityY,\n      identifier: e.identifier,\n      targetTouches: e.targetTouches,\n      finger: e.finger\n    };\n    var data = {\n      target: e.target,\n      event: event,\n      timer: new Timer(update),\n      touch: undefined,\n      timeStamp: e.timeStamp\n    };\n\n    function update(time) {\n      updateEvent(event, data.touch, data.timeStamp);\n      trigger(data.target, 'move', event);\n    }\n\n    if (e.identifier === undefined) {\n      // We're dealing with a mouse event.\n      // Stop clicks from propagating during a move\n      on(e.target, 'click', preventDefault);\n      on(document, mouseevents.move, activeMousemove, data);\n      on(document, mouseevents.end, activeMouseend, data);\n    } else {\n      // In order to unbind correct handlers they have to be unique\n      data.activeTouchmove = function (e, data) {\n        activeTouchmove(e, data);\n      };\n\n      data.activeTouchend = function (e, data) {\n        activeTouchend(e, data);\n      }; // We're dealing with a touch.\n\n\n      on(document, touchevents.move, data.activeTouchmove, data);\n      on(document, touchevents.end, data.activeTouchend, data);\n    }\n  }\n\n  on(document, 'mousedown', mousedown);\n  on(document, 'touchstart', touchstart);\n  on(document, 'movestart', movestart); // jQuery special events\n  //\n  // jQuery event objects are copies of DOM event objects. They need\n  // a little help copying the move properties across.\n\n  if (!__webpack_provided_window_dot_jQuery) {\n    return;\n  }\n\n  var properties = \"startX startY pageX pageY distX distY deltaX deltaY velocityX velocityY\".split(' ');\n\n  function enableMove1(e) {\n    e.enableMove();\n  }\n\n  function enableMove2(e) {\n    e.enableMove();\n  }\n\n  function enableMove3(e) {\n    e.enableMove();\n  }\n\n  function add(handleObj) {\n    var handler = handleObj.handler;\n\n    handleObj.handler = function (e) {\n      // Copy move properties across from originalEvent\n      var i = properties.length;\n      var property;\n\n      while (i--) {\n        property = properties[i];\n        e[property] = e.originalEvent[property];\n      }\n\n      handler.apply(this, arguments);\n    };\n  }\n\n  jQuery.event.special.movestart = {\n    setup: function setup() {\n      // Movestart must be enabled to allow other move events\n      on(this, 'movestart', enableMove1); // Do listen to DOM events\n\n      return false;\n    },\n    teardown: function teardown() {\n      off(this, 'movestart', enableMove1);\n      return false;\n    },\n    add: add\n  };\n  jQuery.event.special.move = {\n    setup: function setup() {\n      on(this, 'movestart', enableMove2);\n      return false;\n    },\n    teardown: function teardown() {\n      off(this, 'movestart', enableMove2);\n      return false;\n    },\n    add: add\n  };\n  jQuery.event.special.moveend = {\n    setup: function setup() {\n      on(this, 'movestart', enableMove3);\n      return false;\n    },\n    teardown: function teardown() {\n      off(this, 'movestart', enableMove3);\n      return false;\n    },\n    add: add\n  };\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/js/plugins/jquery.event.move.js\n");

/***/ }),

/***/ "./resources/assets/js/plugins/jquery.twentytwenty.js":
/*!************************************************************!*\
  !*** ./resources/assets/js/plugins/jquery.twentytwenty.js ***!
  \************************************************************/
/***/ (function() {

eval("/* eslint-disable */\n(function ($) {\n  $.fn.twentytwenty = function (options) {\n    var options = $.extend({\n      default_offset_pct: 0.5,\n      orientation: 'horizontal',\n      before_label: 'Before',\n      after_label: 'After',\n      no_overlay: false,\n      move_slider_on_hover: false,\n      move_with_handle_only: true,\n      click_to_move: false\n    }, options);\n    return this.each(function () {\n      var sliderPct = options.default_offset_pct;\n      var container = $(this);\n      var sliderOrientation = options.orientation;\n      var beforeDirection = sliderOrientation === 'vertical' ? 'down' : 'left';\n      var afterDirection = sliderOrientation === 'vertical' ? 'up' : 'right';\n      container.wrap(\"<div class='twentytwenty-wrapper twentytwenty-\" + sliderOrientation + \"'></div>\");\n\n      if (!options.no_overlay) {\n        container.append(\"<div class='twentytwenty-overlay'></div>\");\n        var overlay = container.find(\".twentytwenty-overlay\");\n        overlay.append(\"<div class='twentytwenty-before-label' data-content='\" + options.before_label + \"'></div>\");\n        overlay.append(\"<div class='twentytwenty-after-label' data-content='\" + options.after_label + \"'></div>\");\n      }\n\n      var beforeImg = container.find(\"img:first\");\n      var afterImg = container.find(\"img:last\");\n      container.append(\"<div class='twentytwenty-handle'></div>\");\n      var slider = container.find(\".twentytwenty-handle\");\n      slider.append(\"<span class='twentytwenty-\" + beforeDirection + \"-arrow'></span>\");\n      slider.append(\"<span class='twentytwenty-\" + afterDirection + \"-arrow'></span>\");\n      container.addClass(\"twentytwenty-container\");\n      beforeImg.addClass(\"twentytwenty-before\");\n      afterImg.addClass(\"twentytwenty-after\");\n\n      var calcOffset = function calcOffset(dimensionPct) {\n        var w = beforeImg.width();\n        var h = beforeImg.height();\n        return {\n          w: w + \"px\",\n          h: h + \"px\",\n          cw: dimensionPct * w + \"px\",\n          ch: dimensionPct * h + \"px\"\n        };\n      };\n\n      var adjustContainer = function adjustContainer(offset) {\n        if (sliderOrientation === 'vertical') {\n          beforeImg.css(\"clip\", \"rect(0,\" + offset.w + \",\" + offset.ch + \",0)\");\n          afterImg.css(\"clip\", \"rect(\" + offset.ch + \",\" + offset.w + \",\" + offset.h + \",0)\");\n        } else {\n          beforeImg.css(\"clip\", \"rect(0,\" + offset.cw + \",\" + offset.h + \",0)\");\n          afterImg.css(\"clip\", \"rect(0,\" + offset.w + \",\" + offset.h + \",\" + offset.cw + \")\");\n        }\n\n        container.css(\"height\", offset.h);\n      };\n\n      var adjustSlider = function adjustSlider(pct) {\n        var offset = calcOffset(pct);\n        slider.css(sliderOrientation === \"vertical\" ? \"top\" : \"left\", sliderOrientation === \"vertical\" ? offset.ch : offset.cw);\n        adjustContainer(offset);\n      }; // Return the number specified or the min/max number if it outside the range given.\n\n\n      var minMaxNumber = function minMaxNumber(num, min, max) {\n        return Math.max(min, Math.min(max, num));\n      }; // Calculate the slider percentage based on the position.\n\n\n      var getSliderPercentage = function getSliderPercentage(positionX, positionY) {\n        var sliderPercentage = sliderOrientation === 'vertical' ? (positionY - offsetY) / imgHeight : (positionX - offsetX) / imgWidth;\n        return minMaxNumber(sliderPercentage, 0, 1);\n      };\n\n      $(window).on(\"resize.twentytwenty\", function (e) {\n        adjustSlider(sliderPct);\n      });\n\n      window.resizetwentytwenty = function (x) {\n        adjustSlider(x);\n      };\n\n      var offsetX = 0;\n      var offsetY = 0;\n      var imgWidth = 0;\n      var imgHeight = 0;\n\n      var onMoveStart = function onMoveStart(e) {\n        if ((e.distX > e.distY && e.distX < -e.distY || e.distX < e.distY && e.distX > -e.distY) && sliderOrientation !== 'vertical') {\n          e.preventDefault();\n        } else if ((e.distX < e.distY && e.distX < -e.distY || e.distX > e.distY && e.distX > -e.distY) && sliderOrientation === 'vertical') {\n          e.preventDefault();\n        }\n\n        container.addClass(\"active\");\n        offsetX = container.offset().left;\n        offsetY = container.offset().top;\n        imgWidth = beforeImg.width();\n        imgHeight = beforeImg.height();\n      };\n\n      var onMove = function onMove(e) {\n        if (container.hasClass(\"active\")) {\n          sliderPct = getSliderPercentage(e.pageX, e.pageY);\n          adjustSlider(sliderPct);\n        }\n      };\n\n      var onMoveEnd = function onMoveEnd() {\n        container.removeClass(\"active\");\n      };\n\n      var moveTarget = options.move_with_handle_only ? slider : container;\n      moveTarget.on(\"movestart\", onMoveStart);\n      moveTarget.on(\"move\", onMove);\n      moveTarget.on(\"moveend\", onMoveEnd);\n\n      if (options.move_slider_on_hover) {\n        container.on(\"mouseenter\", onMoveStart);\n        container.on(\"mousemove\", onMove);\n        container.on(\"mouseleave\", onMoveEnd);\n      }\n\n      slider.on(\"touchmove\", function (e) {\n        e.preventDefault();\n      });\n      container.find(\"img\").on(\"mousedown\", function (event) {\n        event.preventDefault();\n      });\n\n      if (options.click_to_move) {\n        container.on('click', function (e) {\n          offsetX = container.offset().left;\n          offsetY = container.offset().top;\n          imgWidth = beforeImg.width();\n          imgHeight = beforeImg.height();\n          sliderPct = getSliderPercentage(e.pageX, e.pageY);\n          adjustSlider(sliderPct);\n        });\n      }\n\n      $(window).trigger(\"resize.twentytwenty\");\n    });\n  };\n})(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/js/plugins/jquery.twentytwenty.js\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ "use strict";
/******/ 
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["/js/vendor"], function() { return __webpack_exec__("./resources/assets/js/pages/features-single.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);